# default profile can be overriden at run time using property -Dspring.profiles.active="prod"
spring.profiles.default=prod

spring.thymeleaf.cache=false
# ===============================
# = DATA SOURCE
# ===============================

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

spring.datasource.continue-on-error=true

# Naming strategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


spring.http.multipart.max-file-size=51MB
spring.http.multipart.max-request-size=55MB

ndnc.max.upload.files=100
ndnc.max.upload.records=100000
ndnc.max.file.size=100000

# AWS configuration
cloud.aws.credentials.accessKey==
cloud.aws.credentials.secretKey=
cloud.aws.credentials.instanceProfile=true

cloud.aws.region=ap-south-1
cloud.aws.region.static=ap-south-1

sch.ndnc.temp.file.cleanup.cron=0 0 1 * * ?






